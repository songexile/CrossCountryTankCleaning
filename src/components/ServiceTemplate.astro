---
import Layout from "../layouts/Layout.astro";
import { Image } from "astro:assets";

interface Paragraph {
  boldText?: string;
  text: string;
}

interface Props {
  title: string;
  description: string;
  imageSrc: ImageMetadata;
  serviceName: string;
  paragraphs: (string | Paragraph)[];
  highlights: string[];
  bookingLink: string;
  subheading?: string;
}

const { title, description, imageSrc, serviceName, paragraphs, highlights, bookingLink, subheading } = Astro.props as Props;

const introText = paragraphs.length > 0 ? paragraphs[0] : null;
const detailedDescription = paragraphs.slice(1);
---
<Layout title={title} description={description}>
  <section id="services" class="py-16 bg-gradient-to-b from-blue-50 to-gray-50 min-h-screen">
    <div class="max-w-screen-xl mx-auto px-6 flex flex-col items-center gap-12">
      
      <!-- 1. Title Section -->
      <div class="text-center">
        <h1 class="text-4xl font-bold text-gray-800 leading-tight">
          {serviceName}
        </h1>
        {subheading && <h2 class="text-lg mt-2">{subheading}</h2>}
        <p class="text-lg text-gray-600 max-w-2xl mx-auto mt-4">{description}</p>
      </div>

      <!-- 2. Service Highlights (Boxes) -->
      <div class="flex flex-wrap gap-6 w-full justify-center items-center">
        {highlights.map((highlight) => (
          <p class="bg-gray-100 p-6 hover:bg-gray-200 transition-all rounded-lg text-center text-xl font-medium text-gray-700">
            {highlight}
          </p>
        ))}
      </div>

      <!-- 3. Preface/Intro with Side-by-Side Layout -->
      <div class="w-full max-w-6xl mx-auto">
        <div class="grid grid-cols-1 md:grid-cols-12 gap-8 items-center">
          <!-- Text Column (5 columns on desktop) -->
          <div class="md:col-span-5 flex flex-col justify-center space-y-4">
            <div class="prose max-w-none">
              {introText && (
                <p class="leading-relaxed text-lg text-gray-700">
                  {typeof introText === "string"
                    ? introText
                    : (
                      <>
                        {introText.boldText && <strong class="text-gray-900">{introText.boldText}</strong>} {introText.text}
                      </>
                    )
                  }
                </p>
              )}
            </div>
          </div>
          <!-- Image Column (7 columns on desktop) -->
          <div class="md:col-span-7 order-first md:order-last">
            <div class="aspect-w-16 aspect-h-9">
              <Image 
                src={imageSrc}
                alt="Service image"
                class="w-full h-full object-cover rounded-lg shadow-lg"
              />
            </div>
          </div>
        </div>
      </div>

      <!-- 4. Detailed Description -->
      <div class="w-full bg-gray-100 rounded-lg p-8">
        <div class="max-w-screen-lg mx-auto text-black space-y-6">
          {detailedDescription.map((paragraph) => {
            if (typeof paragraph === "string") {
              return <p class="leading-relaxed">{paragraph}</p>;
            } else {
              return (
                <p class="leading-relaxed">
                  {paragraph.boldText && <strong>{paragraph.boldText}</strong>} {paragraph.text}
                </p>
              );
            }
          })}
        </div>
      </div>

      <!-- Call-to-Action -->
      <div class="w-full flex justify-center">
        <a href={bookingLink} target="_blank">
          <button class="bg-blue-700 text-white font-semibold py-3 px-8 rounded-lg hover:bg-blue-600 transition-all">
            Book Now
          </button>
        </a>
      </div>
    </div>
  </section>
</Layout>
